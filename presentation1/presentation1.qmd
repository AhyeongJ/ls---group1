---
title: "Presentation2"
author: Ahyeong Jeong
date: "2024-07-17"
categories: [Presentation]
---

#### 필요한 패키지 불러오기

```{python}
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
```

#### 데이터 불러오기

```{python}
market = pd.read_excel("C:/Users/User/Documents/LS 빅데이터 스쿨/ls_group1/data/traditionalmarket.xlsx")
market2 = market.copy()
```

#### 변수명 재설정하기

```{python}
market2 = market2.rename(columns = {"시장명" : "market_name", 
                                    "시장유형" : "type",
                                    "소재지도로명주소" : "adress_road",
                                    "시장개설주기" :  "open_period",
                                    "소재지지번주소" : "address_old",
                                    "점포수" : "market_count",
                                    "사용가능상품권" : "certificate",
                                    "공중화장실 보유여부" :"public_toilet",
                                    "주차장 보유여부" : "parking_lot",
                                    "개설년도" : "year",
                                    "데이터기준일자" : "data_date"})
```

#### 변수별 요약통계량과 정보 확인하기

1.  시장데이터 중복 없는가?

```{python}
# 중복된 데이터 추출
market2[market2['market_name'].duplicated(keep=False)]['market_name'] 
# keep = False :첫 번째 항목과 마지막 항목을 포함하여 모든 중복 항목을 중복으로 간주 
# 시장 이름은 같고 도로명 주소는 다름, 다른 시장 
```

2.  시장 유형 빈도 실펴보기

```{python}
market2['type'].value_counts()
```

3.  소재지도로명주소에서 시/도 만 추출해서 파생변수 region 생성

```{python}
market2['adress_road'].isna().sum()
market2['region'] = market2['adress_road'].str.split().str[0]
market2.head()
```

4.  점포수

```{python}
# 점포 수 요약통계량 
market2["market_count"].describe().round(2)
market2.iloc[market2["market_count"].idxmax(),2]
```

![](images/화면 캡처 2024-07-17 204543.png)

오 이상치가 전혀 아니군 ...!

market_scale 파생변수 생성과 막대그래프 확인
```{python}
plt.clf()
# 점포수의 제 1 사분위: 50, 제 3 사분위 134 기준으로 makret_scale 생성 
market2 = market2.assign(market_scale = np.where(market2["market_count"] >= 134, "large",
                                        np.where(market2["market_count"] >= 50, "medium", "small")))
sns.countplot(data = market2, x = 'market_scale', hue = 'market_scale')
plt.show()
```


온누리 상품권 빈도
```{python}
market2['certificate'].value_counts()
```
공중화장실 보유여부
```{python}
market2['public_toilet'].value_counts()
market2['parking_lot'].value_counts()
```



conv_level 파생변수 생성과 막대그래프 확인
__conv_level 재수정할까?(화장실은 대부분 있는데, 주차장은 60%임)__
_yes no no yes 현황 파악 다시 하기_
```{python}
plt.clf()
market2['conv_level'] = np.where((market2['public_toilet'] == 'Y') & (market2['parking_lot'] == 'Y'), 'high', 
                   np.where((market2['public_toilet'] == 'N') & (market2['public_toilet'] == 'N') , 'low', 'intermediate'))
market2['conv_level'].value_counts()
sns.countplot(data = market2, x = 'conv_level', hue = 'conv_level')
plt.show()
```

```{python}
n_year = market2.groupby('year', as_index = False).agg(n = ("year", "count"))
n_year
sns.lineplot(data = n_year, x = "year", y = "n")
plt.show()
```

